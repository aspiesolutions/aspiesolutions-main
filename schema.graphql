type Query {
  accessCode(where: AccessCodeWhereUniqueInput!): AccessCode
  findFirstAccessCode(where: AccessCodeWhereInput, orderBy: [AccessCodeOrderByWithRelationInput!], cursor: AccessCodeWhereUniqueInput, take: Int, skip: Int, distinct: [AccessCodeScalarFieldEnum!]): AccessCode
  accessCodes(where: AccessCodeWhereInput, orderBy: [AccessCodeOrderByWithRelationInput!], cursor: AccessCodeWhereUniqueInput, take: Int, skip: Int, distinct: [AccessCodeScalarFieldEnum!]): [AccessCode!]!
  aggregateAccessCode(where: AccessCodeWhereInput, orderBy: [AccessCodeOrderByWithRelationInput!], cursor: AccessCodeWhereUniqueInput, take: Int, skip: Int): AggregateAccessCode!
  groupByAccessCode(where: AccessCodeWhereInput, orderBy: [AccessCodeOrderByWithAggregationInput!], by: [AccessCodeScalarFieldEnum!]!, having: AccessCodeScalarWhereWithAggregatesInput, take: Int, skip: Int): [AccessCodeGroupBy!]!
  address(where: AddressWhereUniqueInput!): Address
  findFirstAddress(where: AddressWhereInput, orderBy: [AddressOrderByWithRelationInput!], cursor: AddressWhereUniqueInput, take: Int, skip: Int, distinct: [AddressScalarFieldEnum!]): Address
  addresses(where: AddressWhereInput, orderBy: [AddressOrderByWithRelationInput!], cursor: AddressWhereUniqueInput, take: Int, skip: Int, distinct: [AddressScalarFieldEnum!]): [Address!]!
  aggregateAddress(where: AddressWhereInput, orderBy: [AddressOrderByWithRelationInput!], cursor: AddressWhereUniqueInput, take: Int, skip: Int): AggregateAddress!
  groupByAddress(where: AddressWhereInput, orderBy: [AddressOrderByWithAggregationInput!], by: [AddressScalarFieldEnum!]!, having: AddressScalarWhereWithAggregatesInput, take: Int, skip: Int): [AddressGroupBy!]!
}

type AccessCode {
  id: String!
  used_for: String!
  value: String!
  address_id: String
  address: Address
}

type Address {
  id: String!
  text: String!
  care: String
  facility: String
  facilityType: String
  pinType: String
  pinNum: String
  number: String
  streetPreDir: String
  streetName: String
  streetType: String
  streetPostDir: String
  unitAbbr: String
  unitNum: String
  buisness_name: String
  city: String
  state: String
  zip: String
  zip4: String
  country: String
  _count: AddressCount
  access_codes(where: AccessCodeWhereInput, orderBy: [AccessCodeOrderByWithRelationInput!], cursor: AccessCodeWhereUniqueInput, take: Int, skip: Int, distinct: [AccessCodeScalarFieldEnum!]): [AccessCode!]!
}

type AddressCount {
  access_codes: Int!
}

input AccessCodeWhereInput {
  AND: [AccessCodeWhereInput!]
  OR: [AccessCodeWhereInput!]
  NOT: [AccessCodeWhereInput!]
  id: StringFilter
  used_for: StringFilter
  value: StringFilter
  address: AddressRelationFilter
  address_id: StringNullableFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input AddressRelationFilter {
  is: AddressWhereInput
  isNot: AddressWhereInput
}

input AddressWhereInput {
  AND: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  NOT: [AddressWhereInput!]
  id: StringFilter
  text: StringFilter
  care: StringNullableFilter
  facility: StringNullableFilter
  facilityType: StringNullableFilter
  pinType: StringNullableFilter
  pinNum: StringNullableFilter
  number: StringNullableFilter
  streetPreDir: StringNullableFilter
  streetName: StringNullableFilter
  streetType: StringNullableFilter
  streetPostDir: StringNullableFilter
  unitAbbr: StringNullableFilter
  unitNum: StringNullableFilter
  buisness_name: StringNullableFilter
  city: StringNullableFilter
  state: StringNullableFilter
  zip: StringNullableFilter
  zip4: StringNullableFilter
  country: StringNullableFilter
  access_codes: AccessCodeListRelationFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
  isSet: Boolean
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
  isSet: Boolean
}

input AccessCodeListRelationFilter {
  every: AccessCodeWhereInput
  some: AccessCodeWhereInput
  none: AccessCodeWhereInput
}

input AccessCodeOrderByWithRelationInput {
  id: SortOrder
  used_for: SortOrder
  value: SortOrder
  address: AddressOrderByWithRelationInput
  address_id: SortOrder
}

enum SortOrder {
  asc
  desc
}

input AddressOrderByWithRelationInput {
  id: SortOrder
  text: SortOrder
  care: SortOrder
  facility: SortOrder
  facilityType: SortOrder
  pinType: SortOrder
  pinNum: SortOrder
  number: SortOrder
  streetPreDir: SortOrder
  streetName: SortOrder
  streetType: SortOrder
  streetPostDir: SortOrder
  unitAbbr: SortOrder
  unitNum: SortOrder
  buisness_name: SortOrder
  city: SortOrder
  state: SortOrder
  zip: SortOrder
  zip4: SortOrder
  country: SortOrder
  access_codes: AccessCodeOrderByRelationAggregateInput
}

input AccessCodeOrderByRelationAggregateInput {
  _count: SortOrder
}

input AccessCodeWhereUniqueInput {
  id: String
}

enum AccessCodeScalarFieldEnum {
  id
  used_for
  value
  address_id
}

type AggregateAccessCode {
  _count: AccessCodeCountAggregate
  _min: AccessCodeMinAggregate
  _max: AccessCodeMaxAggregate
}

type AccessCodeCountAggregate {
  id: Int!
  used_for: Int!
  value: Int!
  address_id: Int!
  _all: Int!
}

type AccessCodeMinAggregate {
  id: String
  used_for: String
  value: String
  address_id: String
}

type AccessCodeMaxAggregate {
  id: String
  used_for: String
  value: String
  address_id: String
}

type AccessCodeGroupBy {
  id: String!
  used_for: String!
  value: String!
  address_id: String
  _count: AccessCodeCountAggregate
  _min: AccessCodeMinAggregate
  _max: AccessCodeMaxAggregate
}

input AccessCodeOrderByWithAggregationInput {
  id: SortOrder
  used_for: SortOrder
  value: SortOrder
  address_id: SortOrder
  _count: AccessCodeCountOrderByAggregateInput
  _max: AccessCodeMaxOrderByAggregateInput
  _min: AccessCodeMinOrderByAggregateInput
}

input AccessCodeCountOrderByAggregateInput {
  id: SortOrder
  used_for: SortOrder
  value: SortOrder
  address_id: SortOrder
}

input AccessCodeMaxOrderByAggregateInput {
  id: SortOrder
  used_for: SortOrder
  value: SortOrder
  address_id: SortOrder
}

input AccessCodeMinOrderByAggregateInput {
  id: SortOrder
  used_for: SortOrder
  value: SortOrder
  address_id: SortOrder
}

input AccessCodeScalarWhereWithAggregatesInput {
  AND: [AccessCodeScalarWhereWithAggregatesInput!]
  OR: [AccessCodeScalarWhereWithAggregatesInput!]
  NOT: [AccessCodeScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  used_for: StringWithAggregatesFilter
  value: StringWithAggregatesFilter
  address_id: StringNullableWithAggregatesFilter
}

input StringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input NestedStringWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedStringFilter
  _max: NestedStringFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input StringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
  isSet: Boolean
}

input NestedStringNullableWithAggregatesFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableWithAggregatesFilter
  _count: NestedIntNullableFilter
  _min: NestedStringNullableFilter
  _max: NestedStringNullableFilter
  isSet: Boolean
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
  isSet: Boolean
}

input AddressWhereUniqueInput {
  id: String
  text: String
}

enum AddressScalarFieldEnum {
  id
  text
  care
  facility
  facilityType
  pinType
  pinNum
  number
  streetPreDir
  streetName
  streetType
  streetPostDir
  unitAbbr
  unitNum
  buisness_name
  city
  state
  zip
  zip4
  country
}

type AggregateAddress {
  _count: AddressCountAggregate
  _min: AddressMinAggregate
  _max: AddressMaxAggregate
}

type AddressCountAggregate {
  id: Int!
  text: Int!
  care: Int!
  facility: Int!
  facilityType: Int!
  pinType: Int!
  pinNum: Int!
  number: Int!
  streetPreDir: Int!
  streetName: Int!
  streetType: Int!
  streetPostDir: Int!
  unitAbbr: Int!
  unitNum: Int!
  buisness_name: Int!
  city: Int!
  state: Int!
  zip: Int!
  zip4: Int!
  country: Int!
  _all: Int!
}

type AddressMinAggregate {
  id: String
  text: String
  care: String
  facility: String
  facilityType: String
  pinType: String
  pinNum: String
  number: String
  streetPreDir: String
  streetName: String
  streetType: String
  streetPostDir: String
  unitAbbr: String
  unitNum: String
  buisness_name: String
  city: String
  state: String
  zip: String
  zip4: String
  country: String
}

type AddressMaxAggregate {
  id: String
  text: String
  care: String
  facility: String
  facilityType: String
  pinType: String
  pinNum: String
  number: String
  streetPreDir: String
  streetName: String
  streetType: String
  streetPostDir: String
  unitAbbr: String
  unitNum: String
  buisness_name: String
  city: String
  state: String
  zip: String
  zip4: String
  country: String
}

type AddressGroupBy {
  id: String!
  text: String!
  care: String
  facility: String
  facilityType: String
  pinType: String
  pinNum: String
  number: String
  streetPreDir: String
  streetName: String
  streetType: String
  streetPostDir: String
  unitAbbr: String
  unitNum: String
  buisness_name: String
  city: String
  state: String
  zip: String
  zip4: String
  country: String
  _count: AddressCountAggregate
  _min: AddressMinAggregate
  _max: AddressMaxAggregate
}

input AddressOrderByWithAggregationInput {
  id: SortOrder
  text: SortOrder
  care: SortOrder
  facility: SortOrder
  facilityType: SortOrder
  pinType: SortOrder
  pinNum: SortOrder
  number: SortOrder
  streetPreDir: SortOrder
  streetName: SortOrder
  streetType: SortOrder
  streetPostDir: SortOrder
  unitAbbr: SortOrder
  unitNum: SortOrder
  buisness_name: SortOrder
  city: SortOrder
  state: SortOrder
  zip: SortOrder
  zip4: SortOrder
  country: SortOrder
  _count: AddressCountOrderByAggregateInput
  _max: AddressMaxOrderByAggregateInput
  _min: AddressMinOrderByAggregateInput
}

input AddressCountOrderByAggregateInput {
  id: SortOrder
  text: SortOrder
  care: SortOrder
  facility: SortOrder
  facilityType: SortOrder
  pinType: SortOrder
  pinNum: SortOrder
  number: SortOrder
  streetPreDir: SortOrder
  streetName: SortOrder
  streetType: SortOrder
  streetPostDir: SortOrder
  unitAbbr: SortOrder
  unitNum: SortOrder
  buisness_name: SortOrder
  city: SortOrder
  state: SortOrder
  zip: SortOrder
  zip4: SortOrder
  country: SortOrder
}

input AddressMaxOrderByAggregateInput {
  id: SortOrder
  text: SortOrder
  care: SortOrder
  facility: SortOrder
  facilityType: SortOrder
  pinType: SortOrder
  pinNum: SortOrder
  number: SortOrder
  streetPreDir: SortOrder
  streetName: SortOrder
  streetType: SortOrder
  streetPostDir: SortOrder
  unitAbbr: SortOrder
  unitNum: SortOrder
  buisness_name: SortOrder
  city: SortOrder
  state: SortOrder
  zip: SortOrder
  zip4: SortOrder
  country: SortOrder
}

input AddressMinOrderByAggregateInput {
  id: SortOrder
  text: SortOrder
  care: SortOrder
  facility: SortOrder
  facilityType: SortOrder
  pinType: SortOrder
  pinNum: SortOrder
  number: SortOrder
  streetPreDir: SortOrder
  streetName: SortOrder
  streetType: SortOrder
  streetPostDir: SortOrder
  unitAbbr: SortOrder
  unitNum: SortOrder
  buisness_name: SortOrder
  city: SortOrder
  state: SortOrder
  zip: SortOrder
  zip4: SortOrder
  country: SortOrder
}

input AddressScalarWhereWithAggregatesInput {
  AND: [AddressScalarWhereWithAggregatesInput!]
  OR: [AddressScalarWhereWithAggregatesInput!]
  NOT: [AddressScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  text: StringWithAggregatesFilter
  care: StringNullableWithAggregatesFilter
  facility: StringNullableWithAggregatesFilter
  facilityType: StringNullableWithAggregatesFilter
  pinType: StringNullableWithAggregatesFilter
  pinNum: StringNullableWithAggregatesFilter
  number: StringNullableWithAggregatesFilter
  streetPreDir: StringNullableWithAggregatesFilter
  streetName: StringNullableWithAggregatesFilter
  streetType: StringNullableWithAggregatesFilter
  streetPostDir: StringNullableWithAggregatesFilter
  unitAbbr: StringNullableWithAggregatesFilter
  unitNum: StringNullableWithAggregatesFilter
  buisness_name: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  zip: StringNullableWithAggregatesFilter
  zip4: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
}

type Mutation {
  createAccessCode(data: AccessCodeCreateInput!): AccessCode!
  createManyAccessCode(data: [AccessCodeCreateManyInput!]!): AffectedRowsOutput!
  deleteAccessCode(where: AccessCodeWhereUniqueInput!): AccessCode
  updateAccessCode(data: AccessCodeUpdateInput!, where: AccessCodeWhereUniqueInput!): AccessCode
  deleteManyAccessCode(where: AccessCodeWhereInput): AffectedRowsOutput!
  updateManyAccessCode(data: AccessCodeUpdateManyMutationInput!, where: AccessCodeWhereInput): AffectedRowsOutput!
  upsertAccessCode(where: AccessCodeWhereUniqueInput!, create: AccessCodeCreateInput!, update: AccessCodeUpdateInput!): AccessCode!
  createAddress(data: AddressCreateInput!): Address!
  createManyAddress(data: [AddressCreateManyInput!]!): AffectedRowsOutput!
  deleteAddress(where: AddressWhereUniqueInput!): Address
  updateAddress(data: AddressUpdateInput!, where: AddressWhereUniqueInput!): Address
  deleteManyAddress(where: AddressWhereInput): AffectedRowsOutput!
  updateManyAddress(data: AddressUpdateManyMutationInput!, where: AddressWhereInput): AffectedRowsOutput!
  upsertAddress(where: AddressWhereUniqueInput!, create: AddressCreateInput!, update: AddressUpdateInput!): Address!
}

input AccessCodeCreateInput {
  id: String
  used_for: String!
  value: String!
  address: AddressCreateNestedOneWithoutAccess_codesInput
}

input AddressCreateNestedOneWithoutAccess_codesInput {
  create: AddressCreateWithoutAccess_codesInput
  connectOrCreate: AddressCreateOrConnectWithoutAccess_codesInput
  connect: AddressWhereUniqueInput
}

input AddressCreateWithoutAccess_codesInput {
  id: String
  text: String!
  care: String
  facility: String
  facilityType: String
  pinType: String
  pinNum: String
  number: String
  streetPreDir: String
  streetName: String
  streetType: String
  streetPostDir: String
  unitAbbr: String
  unitNum: String
  buisness_name: String
  city: String
  state: String
  zip: String
  zip4: String
  country: String
}

input AddressCreateOrConnectWithoutAccess_codesInput {
  where: AddressWhereUniqueInput!
  create: AddressCreateWithoutAccess_codesInput!
}

type AffectedRowsOutput {
  count: Int!
}

input AccessCodeCreateManyInput {
  id: String
  used_for: String!
  value: String!
  address_id: String
}

input AccessCodeUpdateInput {
  used_for: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
  address: AddressUpdateOneWithoutAccess_codesInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input AddressUpdateOneWithoutAccess_codesInput {
  create: AddressCreateWithoutAccess_codesInput
  connectOrCreate: AddressCreateOrConnectWithoutAccess_codesInput
  upsert: AddressUpsertWithoutAccess_codesInput
  disconnect: Boolean
  delete: Boolean
  connect: AddressWhereUniqueInput
  update: AddressUpdateWithoutAccess_codesInput
}

input AddressUpsertWithoutAccess_codesInput {
  update: AddressUpdateWithoutAccess_codesInput!
  create: AddressCreateWithoutAccess_codesInput!
}

input AddressUpdateWithoutAccess_codesInput {
  text: StringFieldUpdateOperationsInput
  care: NullableStringFieldUpdateOperationsInput
  facility: NullableStringFieldUpdateOperationsInput
  facilityType: NullableStringFieldUpdateOperationsInput
  pinType: NullableStringFieldUpdateOperationsInput
  pinNum: NullableStringFieldUpdateOperationsInput
  number: NullableStringFieldUpdateOperationsInput
  streetPreDir: NullableStringFieldUpdateOperationsInput
  streetName: NullableStringFieldUpdateOperationsInput
  streetType: NullableStringFieldUpdateOperationsInput
  streetPostDir: NullableStringFieldUpdateOperationsInput
  unitAbbr: NullableStringFieldUpdateOperationsInput
  unitNum: NullableStringFieldUpdateOperationsInput
  buisness_name: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
  zip4: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
}

input NullableStringFieldUpdateOperationsInput {
  set: String
  unset: Boolean
}

input AccessCodeUpdateManyMutationInput {
  used_for: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input AddressCreateInput {
  id: String
  text: String!
  care: String
  facility: String
  facilityType: String
  pinType: String
  pinNum: String
  number: String
  streetPreDir: String
  streetName: String
  streetType: String
  streetPostDir: String
  unitAbbr: String
  unitNum: String
  buisness_name: String
  city: String
  state: String
  zip: String
  zip4: String
  country: String
  access_codes: AccessCodeCreateNestedManyWithoutAddressInput
}

input AccessCodeCreateNestedManyWithoutAddressInput {
  create: [AccessCodeCreateWithoutAddressInput!]
  connectOrCreate: [AccessCodeCreateOrConnectWithoutAddressInput!]
  createMany: AccessCodeCreateManyAddressInputEnvelope
  connect: [AccessCodeWhereUniqueInput!]
}

input AccessCodeCreateWithoutAddressInput {
  id: String
  used_for: String!
  value: String!
}

input AccessCodeCreateOrConnectWithoutAddressInput {
  where: AccessCodeWhereUniqueInput!
  create: AccessCodeCreateWithoutAddressInput!
}

input AccessCodeCreateManyAddressInputEnvelope {
  data: [AccessCodeCreateManyAddressInput!]!
}

input AccessCodeCreateManyAddressInput {
  id: String
  used_for: String!
  value: String!
}

input AddressCreateManyInput {
  id: String
  text: String!
  care: String
  facility: String
  facilityType: String
  pinType: String
  pinNum: String
  number: String
  streetPreDir: String
  streetName: String
  streetType: String
  streetPostDir: String
  unitAbbr: String
  unitNum: String
  buisness_name: String
  city: String
  state: String
  zip: String
  zip4: String
  country: String
}

input AddressUpdateInput {
  text: StringFieldUpdateOperationsInput
  care: NullableStringFieldUpdateOperationsInput
  facility: NullableStringFieldUpdateOperationsInput
  facilityType: NullableStringFieldUpdateOperationsInput
  pinType: NullableStringFieldUpdateOperationsInput
  pinNum: NullableStringFieldUpdateOperationsInput
  number: NullableStringFieldUpdateOperationsInput
  streetPreDir: NullableStringFieldUpdateOperationsInput
  streetName: NullableStringFieldUpdateOperationsInput
  streetType: NullableStringFieldUpdateOperationsInput
  streetPostDir: NullableStringFieldUpdateOperationsInput
  unitAbbr: NullableStringFieldUpdateOperationsInput
  unitNum: NullableStringFieldUpdateOperationsInput
  buisness_name: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
  zip4: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  access_codes: AccessCodeUpdateManyWithoutAddressInput
}

input AccessCodeUpdateManyWithoutAddressInput {
  create: [AccessCodeCreateWithoutAddressInput!]
  connectOrCreate: [AccessCodeCreateOrConnectWithoutAddressInput!]
  upsert: [AccessCodeUpsertWithWhereUniqueWithoutAddressInput!]
  createMany: AccessCodeCreateManyAddressInputEnvelope
  set: [AccessCodeWhereUniqueInput!]
  disconnect: [AccessCodeWhereUniqueInput!]
  delete: [AccessCodeWhereUniqueInput!]
  connect: [AccessCodeWhereUniqueInput!]
  update: [AccessCodeUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [AccessCodeUpdateManyWithWhereWithoutAddressInput!]
  deleteMany: [AccessCodeScalarWhereInput!]
}

input AccessCodeUpsertWithWhereUniqueWithoutAddressInput {
  where: AccessCodeWhereUniqueInput!
  update: AccessCodeUpdateWithoutAddressInput!
  create: AccessCodeCreateWithoutAddressInput!
}

input AccessCodeUpdateWithoutAddressInput {
  used_for: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input AccessCodeUpdateWithWhereUniqueWithoutAddressInput {
  where: AccessCodeWhereUniqueInput!
  data: AccessCodeUpdateWithoutAddressInput!
}

input AccessCodeUpdateManyWithWhereWithoutAddressInput {
  where: AccessCodeScalarWhereInput!
  data: AccessCodeUpdateManyMutationInput!
}

input AccessCodeScalarWhereInput {
  AND: [AccessCodeScalarWhereInput!]
  OR: [AccessCodeScalarWhereInput!]
  NOT: [AccessCodeScalarWhereInput!]
  id: StringFilter
  used_for: StringFilter
  value: StringFilter
  address_id: StringNullableFilter
}

input AddressUpdateManyMutationInput {
  text: StringFieldUpdateOperationsInput
  care: NullableStringFieldUpdateOperationsInput
  facility: NullableStringFieldUpdateOperationsInput
  facilityType: NullableStringFieldUpdateOperationsInput
  pinType: NullableStringFieldUpdateOperationsInput
  pinNum: NullableStringFieldUpdateOperationsInput
  number: NullableStringFieldUpdateOperationsInput
  streetPreDir: NullableStringFieldUpdateOperationsInput
  streetName: NullableStringFieldUpdateOperationsInput
  streetType: NullableStringFieldUpdateOperationsInput
  streetPostDir: NullableStringFieldUpdateOperationsInput
  unitAbbr: NullableStringFieldUpdateOperationsInput
  unitNum: NullableStringFieldUpdateOperationsInput
  buisness_name: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  zip: NullableStringFieldUpdateOperationsInput
  zip4: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
}
