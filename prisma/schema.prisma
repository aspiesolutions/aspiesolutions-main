generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// model State {
//   id           String    @id @default(auto()) @map("_id") @db.ObjectId
//   abbreviation String    @unique
//   name         String    @unique
//   cities       City[]
//   addresses    Address[]
// }

// model City {
//   id        String    @id @default(auto()) @map("_id") @db.ObjectId
//   name      String
//   addresses Address[]
//   state     State     @relation(fields: [state_id], references: [id])
//   state_id  String
// }

model Address {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  text           String @unique
  care  String?
  facility  String?
  facilityType String?
  pinType String?
  pinNum String?
  number String?
  streetPreDir String?
  streetName        String? 
  streetType   String?
  // type          AddressType?
  streetPostDir String?
  unitAbbr      String?
  unitNum       String?
  buisness_name String?
  city          String?
  state         String?      
  zip           String?
  zip4          String?
  country String?
  access_codes  AccessCode[]

}

// enum AddressType {
//   House
//   Duplex
//   Multiplex
//   Apartments
// }

// address is nullable to allow the creation of an access code and
// associate it with an address later
model AccessCode {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  used_for   String
  value      String
  address    Address? @relation(fields: [address_id], references: [id])
  address_id String?
}
